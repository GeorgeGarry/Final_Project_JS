{"ast":null,"code":"const {\n  db\n} = require('../backend/config/db_SQL');\nconst {\n  get_favorite_id\n} = require('../backend/modules/get_favorite_id');\nconst Save_recipe_to_favorites = async body => {\n  const id = body.user_id;\n  console.log('Save_recipe_to_favorites user id passed', id);\n  const {\n    dish_id,\n    dish_title,\n    dish_image,\n    dish_prep_time,\n    dish_ingridients,\n    equipment,\n    instructions\n  } = body.dish;\n  // JSON.stringify(dish_title);\n  console.log(\"instructins\", body.dish.instructions);\n  console.log('whole recipe,', body.dish);\n\n  // if (db('favorites').select(\"dish_id\").where(dish_id)) {\n  //     const favorite = await get_favorite_id(dish_id);\n  //     const favorite_id = favorite[0].favorite_id\n  //     console.log('got favorite', favorite_id);\n\n  //     console.log(\"this dish already exists in the DB\");\n  //     if(db('users_favorites_connection').select('*').where(id,'10')){\n  //         console.log(\"you have it in favorites already\");\n  //     }\n  //     else{console.log(\"you DON'T have it in favorites \");}\n  //     return '';\n  // }\n  // else {\n  // db('users_favorites_connection').insert({\n\n  // })\n  return db('favorites').insert({\n    dish_id,\n    title: dish_title,\n    image: dish_image,\n    cooking_time: dish_prep_time,\n    ingredients: dish_ingridients,\n    equipments: equipment,\n    instructions: instructions\n  }).returning('*');\n  db('');\n  // }\n};\n_c = Save_recipe_to_favorites;\nmodule.exports = {\n  Save_recipe_to_favorites\n};\nvar _c;\n$RefreshReg$(_c, \"Save_recipe_to_favorites\");","map":{"version":3,"names":["db","require","get_favorite_id","Save_recipe_to_favorites","body","id","user_id","console","log","dish_id","dish_title","dish_image","dish_prep_time","dish_ingridients","equipment","instructions","dish","insert","title","image","cooking_time","ingredients","equipments","returning","_c","module","exports","$RefreshReg$"],"sources":["/Users/george/Desktop/Backup_Developers_Institute/Final_Project_JS/Final_Project_JS/CookMate/cook_mate/src/modules/save_recipe_to_favorites.js"],"sourcesContent":["const { db } = require('../backend/config/db_SQL')\nconst { get_favorite_id } = require('../backend/modules/get_favorite_id')\n\nconst Save_recipe_to_favorites = async (body) => {\n    const id = body.user_id;\n    console.log('Save_recipe_to_favorites user id passed', id);\n    const { dish_id,\n        dish_title,\n        dish_image,\n        dish_prep_time,\n        dish_ingridients,\n        equipment,\n        instructions }\n        = body.dish;\n    // JSON.stringify(dish_title);\n    console.log(\"instructins\", body.dish.instructions);\n    console.log('whole recipe,', body.dish);\n\n    // if (db('favorites').select(\"dish_id\").where(dish_id)) {\n    //     const favorite = await get_favorite_id(dish_id);\n    //     const favorite_id = favorite[0].favorite_id\n    //     console.log('got favorite', favorite_id);\n\n    //     console.log(\"this dish already exists in the DB\");\n    //     if(db('users_favorites_connection').select('*').where(id,'10')){\n    //         console.log(\"you have it in favorites already\");\n    //     }\n    //     else{console.log(\"you DON'T have it in favorites \");}\n    //     return '';\n    // }\n    // else {\n        // db('users_favorites_connection').insert({\n\n        // })\n        return db('favorites')\n            .insert({\n                dish_id,\n                title: dish_title,\n                image: dish_image,\n                cooking_time: dish_prep_time,\n                ingredients: dish_ingridients,\n                equipments: equipment,\n                instructions: instructions,\n            })\n            .returning('*');\n                db('')\n    // }\n}\n\nmodule.exports = {Save_recipe_to_favorites};"],"mappings":"AAAA,MAAM;EAAEA;AAAG,CAAC,GAAGC,OAAO,CAAC,0BAA0B,CAAC;AAClD,MAAM;EAAEC;AAAgB,CAAC,GAAGD,OAAO,CAAC,oCAAoC,CAAC;AAEzE,MAAME,wBAAwB,GAAG,MAAOC,IAAI,IAAK;EAC7C,MAAMC,EAAE,GAAGD,IAAI,CAACE,OAAO;EACvBC,OAAO,CAACC,GAAG,CAAC,yCAAyC,EAAEH,EAAE,CAAC;EAC1D,MAAM;IAAEI,OAAO;IACXC,UAAU;IACVC,UAAU;IACVC,cAAc;IACdC,gBAAgB;IAChBC,SAAS;IACTC;EAAa,CAAC,GACZX,IAAI,CAACY,IAAI;EACf;EACAT,OAAO,CAACC,GAAG,CAAC,aAAa,EAAEJ,IAAI,CAACY,IAAI,CAACD,YAAY,CAAC;EAClDR,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEJ,IAAI,CAACY,IAAI,CAAC;;EAEvC;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACI;;EAEA;EACA,OAAOhB,EAAE,CAAC,WAAW,CAAC,CACjBiB,MAAM,CAAC;IACJR,OAAO;IACPS,KAAK,EAAER,UAAU;IACjBS,KAAK,EAAER,UAAU;IACjBS,YAAY,EAAER,cAAc;IAC5BS,WAAW,EAAER,gBAAgB;IAC7BS,UAAU,EAAER,SAAS;IACrBC,YAAY,EAAEA;EAClB,CAAC,CAAC,CACDQ,SAAS,CAAC,GAAG,CAAC;EACXvB,EAAE,CAAC,EAAE,CAAC;EAClB;AACJ,CAAC;AAAAwB,EAAA,GA5CKrB,wBAAwB;AA8C9BsB,MAAM,CAACC,OAAO,GAAG;EAACvB;AAAwB,CAAC;AAAC,IAAAqB,EAAA;AAAAG,YAAA,CAAAH,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}